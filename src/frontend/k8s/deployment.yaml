apiVersion: apps/v1
kind: Deployment
metadata: {name: {{build.name}}}
spec:
  replicas: 1
  selector:
    matchLabels: {app: {{build.name}}}
  strategy:
    rollingUpdate: {maxSurge: 1, maxUnavailable: 0}
    type: RollingUpdate
  template:
    metadata:
      labels: {app: {{build.name}}}
      name: {{build.name}}
    spec:
      restartPolicy: Always
      containers:
      - image: {{build.images["Dockerfile"]}}
        imagePullPolicy: IfNotPresent
        name: {{build.name}}
        resources:
          requests:
            memory: {{build.profile.min_memory|default(0.1)}}
            cpu: {{build.profile.min_cpu|default(0.1)}}
          limits:
            memory: {{build.profile.max_memory}}
            cpu: {{build.profile.max_cpu}}
        ports:
        - containerPort: {{service.targetPort|default('80')}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{service.targetPort|default('80')}}
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{service.targetPort|default('80')}}
          initialDelaySeconds: 20
          periodSeconds: 10
        env:
        - name: RABBITMQ_USER
          value: rabbit
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: rabbitmq-password
        {% if not build.profile.debug|default(false) %}
        - name: MIX_ENV
          value: prod
        {% endif %}
